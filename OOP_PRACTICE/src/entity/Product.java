package entity;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Product implements IApp {
    private static List<Product> productList = new ArrayList<>();

    private String productId;
    private String name;
    private float importPrice;
    private float exportPrice;
    private String title;
    private String description;
    private int quantity;
    private int categoryId;
    private int status; // 0: ƒêang ho·∫°t ƒë·ªông, 1: H·∫øt h√†ng, 2: Kh√¥ng ho·∫°t ƒë·ªông

    public Product() {}

    public Product(String productId, String name, float importPrice, float exportPrice,
                   String title, String description, int quantity, int categoryId, int status) {
        this.productId = productId;
        this.name = name;
        this.importPrice = importPrice;
        this.exportPrice = exportPrice;
        this.title = title;
        this.description = description;
        this.quantity = quantity;
        this.categoryId = categoryId;
        this.status = status;
    }

    // ====== GETTERS & SETTERS ======
    public String getProductId() { return productId; }
    public void setProductId(String productId) { this.productId = productId; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public float getImportPrice() { return importPrice; }
    public void setImportPrice(float importPrice) { this.importPrice = importPrice; }
    public float getExportPrice() { return exportPrice; }
    public void setExportPrice(float exportPrice) { this.exportPrice = exportPrice; }
    public int getQuantity() { return quantity; }
    public void setQuantity(int quantity) { this.quantity = quantity; }
    public int getCategoryId() { return categoryId; }
    public void setCategoryId(int categoryId) { this.categoryId = categoryId; }
    public int getStatus() { return status; }
    public void setStatus(int status) { this.status = status; }

    // ====== NH·∫¨P D·ªÆ LI·ªÜU ======
    @Override
    public void inputData(Scanner scanner) {
        System.out.print("Nh·∫≠p m√£ s·∫£n ph·∫©m: ");
        this.productId = scanner.nextLine();
        System.out.print("Nh·∫≠p t√™n s·∫£n ph·∫©m: ");
        this.name = scanner.nextLine();
        System.out.print("Nh·∫≠p gi√° nh·∫≠p s·∫£n ph·∫©m: ");
        this.importPrice = scanner.nextFloat();
        System.out.print("Nh·∫≠p gi√° xu·∫•t s·∫£n ph·∫©m: ");
        this.exportPrice = scanner.nextFloat();
        scanner.nextLine(); // Clear buffer
        System.out.print("Nh·∫≠p ti√™u ƒë·ªÅ s·∫£n ph·∫©m: ");
        this.title = scanner.nextLine();
        System.out.print("Nh·∫≠p m√¥ t·∫£ s·∫£n ph·∫©m: ");
        this.description = scanner.nextLine();
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng s·∫£n ph·∫©m: ");
        this.quantity = scanner.nextInt();
        System.out.print("Nh·∫≠p m√£ danh m·ª•c s·∫£n ph·∫©m: ");
        this.categoryId = scanner.nextInt();
        System.out.print("Nh·∫≠p tr·∫°ng th√°i s·∫£n ph·∫©m (0: ƒêang ho·∫°t ƒë·ªông, 1: H·∫øt h√†ng, 2: Kh√¥ng ho·∫°t ƒë·ªông): ");
        this.status = scanner.nextInt();

        productList.add(this);
        System.out.println("‚úÖ Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!");
    }

    // ====== HI·ªÇN TH·ªä D·ªÆ LI·ªÜU ======
    @Override
    public void displayData() {
        System.out.println("M√£ SP: " + productId + " - T√™n: " + name + " - Gi√° xu·∫•t: " + exportPrice +
                " - S·ªë l∆∞·ª£ng: " + quantity + " - Tr·∫°ng th√°i: " + getStatusString());
    }

    private String getStatusString() {
        switch (status) {
            case 0: return "ƒêang ho·∫°t ƒë·ªông";
            case 1: return "H·∫øt h√†ng";
            case 2: return "Kh√¥ng ho·∫°t ƒë·ªông";
            default: return "Kh√¥ng x√°c ƒë·ªãnh";
        }
    }

    // ====== C·∫¨P NH·∫¨T S·∫¢N PH·∫®M ======
    public void updateProduct(Scanner scanner) {
        System.out.print("C·∫≠p nh·∫≠t t√™n s·∫£n ph·∫©m: ");
        scanner.nextLine(); // ƒê·ªçc d√≤ng tr·ªëng
        this.name = scanner.nextLine();

        System.out.print("C·∫≠p nh·∫≠t gi√° nh·∫≠p s·∫£n ph·∫©m: ");
        this.importPrice = scanner.nextFloat();

        System.out.print("C·∫≠p nh·∫≠t gi√° xu·∫•t s·∫£n ph·∫©m: ");
        this.exportPrice = scanner.nextFloat();

        System.out.print("C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m: ");
        this.quantity = scanner.nextInt();
    }

    // ====== X√ìA S·∫¢N PH·∫®M ======
    public static void deleteProduct(String id) {
        productList.removeIf(product -> product.getProductId().equals(id));
        System.out.println("‚úÖ X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!");
    }

    // ====== T√åM KI·∫æM S·∫¢N PH·∫®M ======
    public static Product searchProduct(String keyword) {
        for (Product product : productList) {
            if (product.getName().toLowerCase().contains(keyword.toLowerCase())) {
                return product;
            }
        }
        return null;
    }

    // ====== T√åM KI·∫æM THEO GI√Å ======
    public static List<Product> searchByPriceRange(float minPrice, float maxPrice) {
        List<Product> result = new ArrayList<>();
        for (Product product : productList) {
            if (product.getExportPrice() >= minPrice && product.getExportPrice() <= maxPrice) {
                result.add(product);
            }
        }
        return result;
    }

    // ====== S·∫ÆP X·∫æP S·∫¢N PH·∫®M THEO GI√Å ======
    public static void sortByPrice() {
        productList.sort((p1, p2) -> Float.compare(p1.getExportPrice(), p2.getExportPrice()));
        System.out.println("‚úÖ ƒê√£ s·∫Øp x·∫øp s·∫£n ph·∫©m theo gi√° xu·∫•t!");
    }

    // ====== B√ÅN S·∫¢N PH·∫®M ======
    public void sellProduct(int soldQuantity) {
        if (soldQuantity > 0 && soldQuantity <= quantity) {
            quantity -= soldQuantity;
            System.out.println("‚úÖ ƒê√£ b√°n " + soldQuantity + " s·∫£n ph·∫©m. S·ªë l∆∞·ª£ng c√≤n l·∫°i: " + quantity);
        } else {
            System.out.println("‚ùå S·ªë l∆∞·ª£ng b√°n kh√¥ng h·ª£p l·ªá!");
        }
    }

    // ====== TH·ªêNG K√ä S·∫¢N PH·∫®M THEO DANH M·ª§C ======
    public static void statisticsByCategory() {
        int[] categoryCount = new int[100];
        for (Product product : productList) {
            categoryCount[product.getCategoryId()]++;
        }

        System.out.println("üìä Th·ªëng k√™ s·∫£n ph·∫©m theo danh m·ª•c:");
        for (int i = 0; i < categoryCount.length; i++) {
            if (categoryCount[i] > 0) {
                System.out.println("Danh m·ª•c " + i + ": " + categoryCount[i] + " s·∫£n ph·∫©m");
            }
        }
    }
}
